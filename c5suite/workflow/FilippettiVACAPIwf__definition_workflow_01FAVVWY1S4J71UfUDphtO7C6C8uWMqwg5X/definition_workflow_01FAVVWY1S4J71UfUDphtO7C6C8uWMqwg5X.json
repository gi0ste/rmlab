{
  "workflow": {
    "unique_name": "definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X",
    "name": "Veeam VAC Backup Agent Management ",
    "title": "Veeam VAC Backup Agent Management ",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "local",
          "name": "time_counter",
          "type": "datatype.integer",
          "description": "Variable used to avoid infinite loops",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FF37TH7QRX00g6dLFkD70yUOpZ10qZdoC",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Cloud Provider",
          "type": "datatype.string",
          "description": "Define input for the public cloud environment",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FGRK4F7QTTF3EVDAvqF9fJmXZB1rfdTfj",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "access_token",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FBGA0NW0P2I2tECsbPcp3zukSGhOTYyoc",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Management mode",
          "type": "datatype.string",
          "description": "Variable used to get and check the management mode of the workstation before to activate the backup",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FCLB6B40YKS0VFKVSmCGc9St75ISZa7tJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Workstation IP address",
          "type": "datatype.string",
          "description": "Workstation IP address used to get the specific discovered computer ",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FGQMN2OU5XL0HXJ51sTLitZhvtdGRFTvo",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 10,
          "scope": "local",
          "name": "loop_counter",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "GET all backups request body",
          "type": "datatype.string",
          "description": "Used to save the response body when we check the backup agent has been discovered",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FCKRYK392NR44OdCr1m2s84MwLQhTvKFs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "*****",
          "scope": "input",
          "name": "password",
          "type": "datatype.secure_string",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FBGELC22EEE5eZIsqJDP7zeY1u8URAeOj",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "cqjw-058843fd9",
          "scope": "input",
          "name": "Workstation ID",
          "type": "datatype.string",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "DEMO Workstation Policy",
          "scope": "input",
          "name": "Backup Policy",
          "type": "datatype.string",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FC8YKL5AC2838ClnJtivjwkt6RiIMW6oU",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "refresh_token",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FBGA7MNWLKI2cZbWpkQnLAzBdvlbjpZBg",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "CCS_LAB\\ccs.admin",
          "scope": "input",
          "name": "username",
          "type": "datatype.string",
          "is_required": true
        },
        "unique_name": "variable_workflow_01FBGE0LAZ80B17EwFKqGlRtRLBNKQ3KFcF",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Operation Mode",
          "type": "datatype.string",
          "description": "Contain the Operational status of the VM [Licensed/unLicensed]",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FCAF0KDJ2IR0xuB6pX3Ps6dIJ9UVUN2uU",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 400,
          "scope": "local",
          "name": "max_waiting_time",
          "type": "datatype.integer",
          "description": "Variable used to set the maximum waiting time inside a loop in seconds",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FFVE6SSIAKA5MppR8NNLFLNN8XO0tG9DX",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "null",
          "scope": "local",
          "name": "BackupAgentID",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FCK4Q2SIA5L2XnY9gSk315hocP6eQNLnt",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "null",
          "scope": "local",
          "name": "Veeam_workstation_uid",
          "type": "datatype.string",
          "description": "uID given by Veeam to identify the workstation",
          "is_required": false
        },
        "unique_name": "variable_workflow_01FE9SB8BSU3M3LPS0XTGrCQIcM5lsMp1u8",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Manages the installation and configuration of the backup agent using the Veeam VSPC (aka VAC) API",
      "display_name": "Veeam VAC Backup Agent Management ",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "target_id": "definition_target_01FA23LAB0U1W72OX6KHvP6VXtfZhoU8zUZ",
        "execute_on_workflow_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01FBP4PTRX9OE1aeMXKiN4VFx8maRrgDbhn",
        "name": "HTTP Request",
        "title": "VAC Authentication",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "body": "grant_type=password\u0026username=$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FBGE0LAZ80B17EwFKqGlRtRLBNKQ3KFcF$\u0026password=$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FBGELC22EEE5eZIsqJDP7zeY1u8URAeOj$",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "description": "HTTP GET request for OAuth 2.0 authentication to the VAC",
          "display_name": "VAC Authentication",
          "method": "POST",
          "relative_url": "api/v3/token",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": false,
            "override_workflow_target_group_criteria": false,
            "use_workflow_target": true,
            "use_workflow_target_group": false
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz",
        "name": "JSONPath Query",
        "title": "Get Authorization Token ",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "JsonPath query to the body of the previous HTTP GET request to get the access token that is going to be used in the other API calls",
          "display_name": "Get Authorization Token ",
          "input_json": "$activity.definition_activity_01FBP4PTRX9OE1aeMXKiN4VFx8maRrgDbhn.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.access_token",
              "jsonpath_query_name": "access_token",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01FAYKRSPAPBJ3E3XAMFzwNOzB837FkYU3a",
        "name": "Condition Block",
        "title": "Authentication Check",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Check if the authentication was successful ",
          "display_name": "Authentication Check",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01FAYKRUZFT066q7aPS8kbhZMvDyFWkIQl0",
            "name": "Condition Branch",
            "title": "Authentication Failed",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01FBP4PTRX9OE1aeMXKiN4VFx8maRrgDbhn.output.response_body$",
                "operator": "nmw",
                "right_operand": "*access_token*"
              },
              "continue_on_failure": false,
              "description": "The access token cannot be found in the body, meaning the authentication has failed.",
              "display_name": "Authentication Failed",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01FF1PB2VOK6E0cggXWyRq1MUO4x5cNI3sf",
                "name": "Failed",
                "title": "Completed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "display_name": "Failed",
                  "result_message": "Authentication Failed"
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01FAYW2ZKRIE31uCjQrYGE1d3t7V7SOSJSn",
            "name": "Condition Branch",
            "title": "Authentication Suceeded",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01FBP4PTRX9OE1aeMXKiN4VFx8maRrgDbhn.output.response_body$",
                "operator": "mw",
                "right_operand": "*access_token*"
              },
              "continue_on_failure": false,
              "description": "Access token can be found in the response body, meaning authentication succeded",
              "display_name": "Authentication Suceeded",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01FE9PMOEF4KS67e1oEAivsm3tHkrQLRdtQ",
                "name": "While Loop",
                "title": "While Loop to check workstation discovered",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "First loop to check if the VAC has already discovered the workstation. The Management Agent must has been already installed in the workstation in order to see it discovered in the VAC. (Management Agent installation is done in the Veeam Agent Setup workflow from whic the Veeam VAC Backup Agent Management is called as atomic workflow)",
                  "display_name": "While Loop to check workstation discovered",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01FE9PMR3LCCA50sMxaHUL7ULywsbLH1j21",
                    "name": "Condition Branch",
                    "title": "Check if veeam workstation id exist",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FE9SB8BSU3M3LPS0XTGrCQIcM5lsMp1u8$",
                          "operator": "eq",
                          "right_operand": "null"
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$",
                          "operator": "gt",
                          "right_operand": 0
                        }
                      },
                      "continue_on_failure": false,
                      "description": "Check if Veeam has already associated an ID to the Workstation, meaning that it has been already discovered.\nThe second condition relates to a counter for limit the number of loops.",
                      "display_name": "Check if veeam workstation id exist",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY",
                        "name": "HTTP Request",
                        "title": "Get All Discovered Computer",
                        "type": "web-service.http_request",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "allow_auto_redirect": true,
                          "continue_on_error_status_code": false,
                          "continue_on_failure": false,
                          "custom_headers": [
                            {
                              "name": "Authorization",
                              "value": "Bearer $activity.definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz.output.jsonpath_queries.access_token$"
                            }
                          ],
                          "description": "HTTP GET Request to the API exposed by VAC in order to get the list of all discovered computer",
                          "display_name": "Get All Discovered Computer",
                          "method": "GET",
                          "relative_url": "api/v3/discovery/computers",
                          "runtime_user": {
                            "override_target_runtime_user": false,
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": false,
                            "override_workflow_target_group_criteria": false,
                            "use_workflow_target": true,
                            "use_workflow_target_group": false
                          }
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01FE9U6Y2IACB2ZcJp5tRiLcwDWtCXE9b7p",
                        "name": "Condition Block",
                        "title": "Has the workstation been discovered?",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Check if it exists a Veeam unique identifier (UID) associated to the specific workstation",
                          "display_name": "Has the workstation been discovered?",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_01FE9U70HLLSI57weU6Jg1JOXnyBUwWU8uJ",
                            "name": "Condition Branch",
                            "title": "No workstation id found among discovered computers",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                  "operator": "nmw",
                                  "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$*"
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                  "operator": "nmw",
                                  "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGQMN2OU5XL0HXJ51sTLitZhvtdGRFTvo$*"
                                }
                              },
                              "continue_on_failure": false,
                              "description": "Workstation ID and IP address have not been found in the response body of HTTP GET discovered computers. Meaning that the workstation we want to backup is not among discovered computers.\nThere are two conditions (ID and IP address) because Veeam associates a hostname to AWS workstation different from the one associated by Cloud Clenter Suite, meaning that we cannot use as input to query the body of HTTP GET response from Veeam API. (When using this workflow as atomic into the Veeam agent setup, the ideal condition would be having correlations between hostnames and ID between Veeam and CCS for AWS cloud.) \n",
                              "display_name": "No workstation id found among discovered computers",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01FE9WJDIG7GN02GJcjXX82npWEgKgB6ZTa",
                                "name": "Sleep",
                                "title": "Sleep",
                                "type": "core.sleep",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Sleep to wait before to retry the loop",
                                  "display_name": "Sleep",
                                  "skip_execution": false,
                                  "sleep_interval": 10
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_01FGUM3YGWF2820OYcV0GiqSKIMP5srVbK6",
                                "name": "Set Variables",
                                "title": "Decrease Loop Counter",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Decrese the counter used for limiting the number of loops",
                                  "display_name": "Decrease Loop Counter",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$",
                                      "variable_value_new": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$ - 1"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_01FE9U71D3HEJ6wQyZE6wrczaKcDAEBBeZV",
                            "name": "Condition Branch",
                            "title": "workstation id found among discovered computers",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                  "operator": "mw",
                                  "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$*"
                                },
                                "operator": "or",
                                "right_operand": {
                                  "left_operand": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                  "operator": "mw",
                                  "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGQMN2OU5XL0HXJ51sTLitZhvtdGRFTvo$*"
                                }
                              },
                              "continue_on_failure": false,
                              "description": "wokstation ID found in the response body of previous HTTP request ",
                              "display_name": "workstation id found among discovered computers",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01FGRKE8NQG4K5A1tKUFxyzXGSZOSgdRmwW",
                                "name": "Condition Block",
                                "title": "Check cloud environment",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Check cloud environment",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_01FGRKEBCV8O15JXaxiZt4R6S22RH4g5pyY",
                                    "name": "Condition Branch",
                                    "title": "If cloud == AWS",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGRK4F7QTTF3EVDAvqF9fJmXZB1rfdTfj$",
                                        "operator": "eq",
                                        "right_operand": "Amazon"
                                      },
                                      "continue_on_failure": false,
                                      "description": "Se l'environment è AWS, allora significa che c'è stato un match sull'IP Address. Dunque dobbiamo ottenere il Veeam UID associato alla workstation ma anche l'hostname che Veeam da alla workstation (diverso da quello di CCS)",
                                      "display_name": "If cloud == AWS",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_01FGRM7Q7KGNA5IfklYnOM19Dw4uuoBvA0U",
                                        "name": "JSONPath Query",
                                        "title": "Get AWS Workstation UID",
                                        "type": "corejava.jsonpathquery",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "continue_on_failure": false,
                                          "description": "Get the Veeam UID and the hostname of the workstation.",
                                          "display_name": "Get AWS Workstation UID",
                                          "input_json": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                          "jsonpath_queries": [
                                            {
                                              "jsonpath_query": "$.data[?(@.info.ipAddresses[0]==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGQMN2OU5XL0HXJ51sTLitZhvtdGRFTvo$\")].instanceUid",
                                              "jsonpath_query_name": "veeam AWS workstation id",
                                              "jsonpath_query_type": "string"
                                            },
                                            {
                                              "jsonpath_query": "$.data[?(@.info.ipAddresses[0]==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGQMN2OU5XL0HXJ51sTLitZhvtdGRFTvo$\")].info.hostName",
                                              "jsonpath_query_name": "hostname_aws",
                                              "jsonpath_query_type": "string"
                                            }
                                          ],
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_01FGROBVJCBG22FIXIpLxKRFZ6wAhV5MeWK",
                                        "name": "Set Variables",
                                        "title": "Update AWS Veeam Variables",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Store values into variables to use them out of the loop",
                                          "display_name": "Update AWS Veeam Variables",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FE9SB8BSU3M3LPS0XTGrCQIcM5lsMp1u8$",
                                              "variable_value_new": "$activity.definition_activity_01FGRM7Q7KGNA5IfklYnOM19Dw4uuoBvA0U.output.jsonpath_queries.veeam AWS workstation id$"
                                            },
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$",
                                              "variable_value_new": "$activity.definition_activity_01FGRM7Q7KGNA5IfklYnOM19Dw4uuoBvA0U.output.jsonpath_queries.hostname_aws$"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  },
                                  {
                                    "unique_name": "definition_activity_01FGRKEC86DAN6ERfFzjCRjLbRBHQxkpjTK",
                                    "name": "Condition Branch",
                                    "title": "If cloud in not == AWS",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FGRK4F7QTTF3EVDAvqF9fJmXZB1rfdTfj$",
                                        "operator": "ne",
                                        "right_operand": "Amazon"
                                      },
                                      "continue_on_failure": false,
                                      "description": "If cloud is GCP, Veeam and CCS has same values to identify workstation hostname. This has been verified only for GCP.",
                                      "display_name": "If cloud in not == AWS",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_01FEA0OMAXZRS601d2O2mB3KJZBgjgf9J6i",
                                        "name": "JSONPath Query",
                                        "title": "Get Veeam Workstation UID",
                                        "type": "corejava.jsonpathquery",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "continue_on_failure": false,
                                          "description": "Get the Veeam UID of the workstation.",
                                          "display_name": "Get Veeam Workstation UID",
                                          "input_json": "$activity.definition_activity_01FE9MMT6YW6T0h089pnJEdI9EzfSLjO1BY.output.response_body$",
                                          "jsonpath_queries": [
                                            {
                                              "jsonpath_query": "$.data[?(@.info.hostName == \"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$\")].instanceUid",
                                              "jsonpath_query_name": "veeam workstation ID",
                                              "jsonpath_query_type": "string"
                                            }
                                          ],
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_01FEA28O5QS43751OtjSlqSs1GS31qmOBOH",
                                        "name": "Set Variables",
                                        "title": "Update Veeam Workstation UID Variable",
                                        "type": "core.set_multiple_variables",
                                        "base_type": "activity",
                                        "properties": {
                                          "continue_on_failure": false,
                                          "description": "Store value into variable to use them out of the loop",
                                          "display_name": "Update Veeam Workstation UID Variable",
                                          "skip_execution": false,
                                          "variables_to_update": [
                                            {
                                              "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FE9SB8BSU3M3LPS0XTGrCQIcM5lsMp1u8$",
                                              "variable_value_new": "$activity.definition_activity_01FEA0OMAXZRS601d2O2mB3KJZBgjgf9J6i.output.jsonpath_queries.veeam workstation ID$"
                                            }
                                          ]
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01FEA3L7Q70750R6pxT5ok1dDDunJxoCvba",
                "name": "HTTP Request",
                "title": "Install Backup Agents",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "body": "{\n\n \"setReadOnlyAccess\": true,\n\n \"installCbtDriver\": true\n\n}",
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $activity.definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz.output.jsonpath_queries.access_token$"
                    }
                  ],
                  "description": "HTTP GET request to install the Backup Agent on the workstation.",
                  "display_name": "Install Backup Agents",
                  "method": "POST",
                  "relative_url": "api/v3/discovery/computers/$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FE9SB8BSU3M3LPS0XTGrCQIcM5lsMp1u8$/installBackupAgent",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": false,
                    "override_workflow_target_group_criteria": false,
                    "use_workflow_target": true,
                    "use_workflow_target_group": false
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01FF3H5JH094D3ABEPtbZOtK7ACByDnJdrR",
                "name": "Set Variables",
                "title": "Reset Loop Counter",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Reset loop counter to the maximum number of loops possible",
                  "display_name": "Reset Loop Counter",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$",
                      "variable_value_new": 20
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01FCK5NTJBX6X0lwf96woJJYtKRXIA64cgs",
                "name": "While Loop",
                "title": "While LOOP to wait Backup Agent discovery ",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Wait before the Backup agent isntallation succeded",
                  "display_name": "While LOOP to wait Backup Agent discovery ",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01FCK5NWGPH4B3lj9Js5uTOYCsO4vUcPfGw",
                    "name": "Condition Branch",
                    "title": "Check if backup agents ID exist",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCK4Q2SIA5L2XnY9gSk315hocP6eQNLnt$",
                          "operator": "eq",
                          "right_operand": "null"
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$",
                          "operator": "gt",
                          "right_operand": 0
                        }
                      },
                      "continue_on_failure": false,
                      "description": "Check if Veeam has already defined a Backup UID asociated to the workstation. The Backup UID is different from the Workstation UID seen in the previous loop. The Backup ID is associated when the Backup Agent in installed and activated, so when the workstation is in the managed mode.",
                      "display_name": "Check if backup agents ID exist",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01FAYMZXXRYCW3D6JnwPn8OlBfnl55Iwr4Z",
                        "name": "HTTP Request",
                        "title": "Get All Backup Agents",
                        "type": "web-service.http_request",
                        "base_type": "activity",
                        "properties": {
                          "accept": "application/json",
                          "action_timeout": 180,
                          "allow_auto_redirect": true,
                          "continue_on_error_status_code": false,
                          "continue_on_failure": false,
                          "custom_headers": [
                            {
                              "name": "Authorization",
                              "value": "Bearer $activity.definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz.output.jsonpath_queries.access_token$"
                            }
                          ],
                          "description": "HTTP GET request to get all the backups agents VAC has installed so far",
                          "display_name": "Get All Backup Agents",
                          "method": "GET",
                          "relative_url": "api/v3/infrastructure/backupAgents",
                          "runtime_user": {
                            "override_target_runtime_user": false,
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": false,
                            "override_workflow_target_group_criteria": false,
                            "use_workflow_target": true,
                            "use_workflow_target_group": false
                          }
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01FCKE1JVHETR6nXEnthSSZtV6wZOeU2Ieq",
                        "name": "Condition Block",
                        "title": "HAS the backup agent been discovered?",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Check if the Backup UID associated to the workstation is found in the response body",
                          "display_name": "HAS the backup agent been discovered?",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_01FCKE1M3YMR42oPl3q846U4PZG43n8mnGH",
                            "name": "Condition Branch",
                            "title": "No Backup UID found",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_01FAYMZXXRYCW3D6JnwPn8OlBfnl55Iwr4Z.output.response_body$",
                                "operator": "nmw",
                                "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$*"
                              },
                              "continue_on_failure": false,
                              "description": "The workstation hostname can't be found among discovered backup Agents, meaning the installation of the Backup Agent is not completed yet.",
                              "display_name": "No Backup UID found",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01FCKJ9FSVL032z2DJwAGgVBwxVELvVkMiI",
                                "name": "Sleep",
                                "title": "Sleep",
                                "type": "core.sleep",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Sleep to wait before to retry the loop",
                                  "display_name": "Sleep",
                                  "skip_execution": false,
                                  "sleep_interval": 20
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_01FGUOVGQJH4D6y8fjIvOLnOoLDTrs0Kl2Z",
                                "name": "Set Variables",
                                "title": "Decrease Loop Counter",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Decrese the counter used for limiting the number of loops",
                                  "display_name": "Decrease Loop Counter",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$",
                                      "variable_value_new": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FGULDZQUH253YL4FCLRMica8cqsRTVMrJ$ - 1"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_01FCKE1MZUF3P3luX82NYthZgglwLvhBSDA",
                            "name": "Condition Branch",
                            "title": "Workstation ID found",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_01FAYMZXXRYCW3D6JnwPn8OlBfnl55Iwr4Z.output.response_body$",
                                "operator": "mw",
                                "right_operand": "*$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$*"
                              },
                              "continue_on_failure": false,
                              "description": "A Backup Agent UID associated to the workstation hostname has been found, meaning the backup agent installation succeded.",
                              "display_name": "Workstation ID found",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01FE9ZJMK7FW62luHEMq5dHphSZoVJQEDoO",
                                "name": "JSONPath Query",
                                "title": "Get Veeam Backup Agent UID",
                                "type": "corejava.jsonpathquery",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "description": "JsonPath query to get the Backup Agent UID ",
                                  "display_name": "Get Veeam Backup Agent UID",
                                  "input_json": "$activity.definition_activity_01FAYMZXXRYCW3D6JnwPn8OlBfnl55Iwr4Z.output.response_body$$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCKRYK392NR44OdCr1m2s84MwLQhTvKFs$",
                                  "jsonpath_queries": [
                                    {
                                      "jsonpath_query": "$.data.[?(@.name==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$\")].instanceUid",
                                      "jsonpath_query_name": "BackupAgentID",
                                      "jsonpath_query_type": "string"
                                    },
                                    {
                                      "jsonpath_query": "$.data.[?(@.name==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$\")].managementMode",
                                      "jsonpath_query_name": "ManagementMode",
                                      "jsonpath_query_type": "string"
                                    },
                                    {
                                      "jsonpath_query": "$.data.[?(@.name==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC90D4QFUJJ4DMdybvmSfpV3vVppPFS9l$\")].operationMode",
                                      "jsonpath_query_name": "operationMode",
                                      "jsonpath_query_type": "string"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_01FCKNIL3HAZ36UHzn0Lf0Bx5VnqRHXnqbD",
                                "name": "Set Variables",
                                "title": "Update Veeam Backup Agent UID Variable",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Update Backup Agent UID variable",
                                  "display_name": "Update Veeam Backup Agent UID Variable",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCK4Q2SIA5L2XnY9gSk315hocP6eQNLnt$",
                                      "variable_value_new": "$activity.definition_activity_01FE9ZJMK7FW62luHEMq5dHphSZoVJQEDoO.output.jsonpath_queries.BackupAgentID$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCLB6B40YKS0VFKVSmCGc9St75ISZa7tJ$",
                                      "variable_value_new": "$activity.definition_activity_01FE9ZJMK7FW62luHEMq5dHphSZoVJQEDoO.output.jsonpath_queries.ManagementMode$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCAF0KDJ2IR0xuB6pX3Ps6dIJ9UVUN2uU$",
                                      "variable_value_new": "$activity.definition_activity_01FE9ZJMK7FW62luHEMq5dHphSZoVJQEDoO.output.jsonpath_queries.operationMode$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01FC8VBSSU00X5mCuYAleKYt0ZeJYhzJd0L",
                "name": "HTTP Request",
                "title": "Get Available Backup Policies",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "accept": "application/json",
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $activity.definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz.output.jsonpath_queries.access_token$"
                    }
                  ],
                  "description": "HTTP GET request to get the policies already defined in the VAC",
                  "display_name": "Get Available Backup Policies",
                  "method": "GET",
                  "relative_url": "api/v3/configuration/backupPolicies",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": false,
                    "override_workflow_target_group_criteria": false,
                    "use_workflow_target": true,
                    "use_workflow_target_group": false
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01FC92IAO5N5V3pCuXP8sV4PUbZIkFfiBgy",
                "name": "JSONPath Query",
                "title": "Get Veeam Backup Policy ID",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "Get the Veam Backup Policy ID of the specific policy in input",
                  "display_name": "Get Veeam Backup Policy ID",
                  "input_json": "$activity.definition_activity_01FC8VBSSU00X5mCuYAleKYt0ZeJYhzJd0L.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.data.[?(@.name==\"$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.input.variable_workflow_01FC8YKL5AC2838ClnJtivjwkt6RiIMW6oU$\")].instanceUid",
                      "jsonpath_query_name": "Backup Policy ID",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01FEVSTLR2TLV7Q87j0Bq4YAlqj1dn2KXWF",
                "name": "HTTP Request",
                "title": "Assign Veeam Backup Policy To Workstation",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $activity.definition_activity_01FBPPR3WMFBP5yDzIhtuVVKCjuyQFlvGJz.output.jsonpath_queries.access_token$"
                    }
                  ],
                  "description": "Assign the Veeam Backup Policy to the workstation",
                  "display_name": "Assign Veeam Backup Policy To Workstation",
                  "method": "POST",
                  "relative_url": "api/v3/infrastructure/backupAgents/windows/$workflow.definition_workflow_01FAVVWY1S4J71UfUDphtO7C6C8uWMqwg5X.local.variable_workflow_01FCK4Q2SIA5L2XnY9gSk315hocP6eQNLnt$/assignedPolicies?policyUid=$activity.definition_activity_01FC92IAO5N5V3pCuXP8sV4PUbZIkFfiBgy.output.jsonpath_queries.Backup Policy ID$",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": false,
                    "override_workflow_target_group_criteria": false,
                    "use_workflow_target": true,
                    "use_workflow_target_group": false
                  }
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "targets": {
    "definition_target_01FA23LAB0U1W72OX6KHvP6VXtfZhoU8zUZ": {
      "unique_name": "definition_target_01FA23LAB0U1W72OX6KHvP6VXtfZhoU8zUZ",
      "name": "Filippetti VAC",
      "title": "Filippetti VAC",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "Filippetti VAC",
        "host": "vac.multicloudservices.it",
        "no_runtime_user": true,
        "port": 1280,
        "protocol": "https"
      }
    }
  }
}